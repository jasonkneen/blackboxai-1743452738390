{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/app/(auth)/auth.config.ts"],"sourcesContent":["import type { NextAuthConfig } from 'next-auth';\n\nexport const authConfig = {\n  pages: {\n    signIn: '/login',\n    newUser: '/',\n  },\n  providers: [\n    // added later in auth.ts since it requires bcrypt which is only compatible with Node.js\n    // while this file is also used in non-Node.js environments\n  ],\n  callbacks: {\n    authorized({ auth, request: { nextUrl } }) {\n      const isLoggedIn = !!auth?.user;\n      const isOnChat = nextUrl.pathname.startsWith('/');\n      const isOnRegister = nextUrl.pathname.startsWith('/register');\n      const isOnLogin = nextUrl.pathname.startsWith('/login');\n\n      if (isLoggedIn && (isOnLogin || isOnRegister)) {\n        return Response.redirect(new URL('/', nextUrl as unknown as URL));\n      }\n\n      if (isOnRegister || isOnLogin) {\n        return true; // Always allow access to register and login pages\n      }\n\n      if (isOnChat) {\n        if (isLoggedIn) return true;\n        return false; // Redirect unauthenticated users to login page\n      }\n\n      if (isLoggedIn) {\n        return Response.redirect(new URL('/', nextUrl as unknown as URL));\n      }\n\n      return true;\n    },\n  },\n} satisfies NextAuthConfig;\n"],"names":[],"mappings":";;;AAEO,MAAM,aAAa;IACxB,OAAO;QACL,QAAQ;QACR,SAAS;IACX;IACA,WAAW,EAGV;IACD,WAAW;QACT,YAAW,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE;YACvC,MAAM,aAAa,CAAC,CAAC,MAAM;YAC3B,MAAM,WAAW,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAC7C,MAAM,eAAe,QAAQ,QAAQ,CAAC,UAAU,CAAC;YACjD,MAAM,YAAY,QAAQ,QAAQ,CAAC,UAAU,CAAC;YAE9C,IAAI,cAAc,CAAC,aAAa,YAAY,GAAG;gBAC7C,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,KAAK;YACxC;YAEA,IAAI,gBAAgB,WAAW;gBAC7B,OAAO,MAAM,kDAAkD;YACjE;YAEA,IAAI,UAAU;gBACZ,IAAI,YAAY,OAAO;gBACvB,OAAO,OAAO,+CAA+C;YAC/D;YAEA,IAAI,YAAY;gBACd,OAAO,SAAS,QAAQ,CAAC,IAAI,IAAI,KAAK;YACxC;YAEA,OAAO;QACT;IACF;AACF"}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import NextAuth from 'next-auth';\n\nimport { authConfig } from '@/app/(auth)/auth.config';\n\nexport default NextAuth(authConfig).auth;\n\nexport const config = {\n  matcher: ['/', '/:id', '/api/:path*', '/login', '/register'],\n};\n"],"names":[],"mappings":";;;;AAAA;AAAA;AAEA;;;uCAEe,CAAA,GAAA,6TAAA,CAAA,UAAQ,AAAD,EAAE,yIAAA,CAAA,aAAU,EAAE,IAAI;AAEjC,MAAM,SAAS;IACpB,SAAS;QAAC;QAAK;QAAQ;QAAe;QAAU;KAAY;AAC9D"}}]
}